-- MySQL Script generated by MySQL Workbench
-- Mon Sep 11 13:06:57 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema SPLCustombd
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema SPLCustombd
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `SPLCustombd` DEFAULT CHARACTER SET utf8 ;
USE `SPLCustombd` ;

-- -----------------------------------------------------
-- Table `SPLCustombd`.`SPL`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SPLCustombd`.`SPL` (
  `idSPL` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`idSPL`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SPLCustombd`.`CoreAssetBaseline`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SPLCustombd`.`CoreAssetBaseline` (
  `idBaseline` VARCHAR(200) NOT NULL,
  `releaseDate` DATETIME NOT NULL,
  `SPL_idSPL` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`idBaseline`),
  INDEX `fk_CoreAssetBaseline_SPL1_idx` (`SPL_idSPL` ASC),
  CONSTRAINT `fk_CoreAssetBaseline_SPL1`
    FOREIGN KEY (`SPL_idSPL`)
    REFERENCES `SPLCustombd`.`SPL` (`idSPL`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SPLCustombd`.`Feature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SPLCustombd`.`Feature` (
  `idFeature` VARCHAR(200) NOT NULL,
  `name` VARCHAR(200) NULL DEFAULT NULL,
  PRIMARY KEY (`idFeature`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SPLCustombd`.`CoreAsset`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SPLCustombd`.`CoreAsset` (
  `idCoreAsset` INT NOT NULL,
  `name` VARCHAR(200) NOT NULL,
  `path` VARCHAR(200) NOT NULL,
  `content` LONGTEXT NOT NULL,
  `size` INT NOT NULL,
  `CoreAssetBaseline_idBaseline` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`idCoreAsset`),
  INDEX `fk_CoreAsset_CoreAssetBaseline1_idx` (`CoreAssetBaseline_idBaseline` ASC),
  CONSTRAINT `fk_CoreAsset_CoreAssetBaseline1`
    FOREIGN KEY (`CoreAssetBaseline_idBaseline`)
    REFERENCES `SPLCustombd`.`CoreAssetBaseline` (`idBaseline`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SPLCustombd`.`ProductPortfolio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SPLCustombd`.`ProductPortfolio` (
  `idPortfolio` VARCHAR(200) NOT NULL,
  `SPL_idSPL` VARCHAR(200) NOT NULL,
  `CoreAssetBaseline_idBaseline` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`idPortfolio`),
  INDEX `fk_ProductPortfolio_SPL1_idx` (`SPL_idSPL` ASC),
  INDEX `fk_ProductPortfolio_CoreAssetBaseline1_idx` (`CoreAssetBaseline_idBaseline` ASC),
  CONSTRAINT `fk_ProductPortfolio_SPL1`
    FOREIGN KEY (`SPL_idSPL`)
    REFERENCES `SPLCustombd`.`SPL` (`idSPL`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ProductPortfolio_CoreAssetBaseline1`
    FOREIGN KEY (`CoreAssetBaseline_idBaseline`)
    REFERENCES `SPLCustombd`.`CoreAssetBaseline` (`idBaseline`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SPLCustombd`.`Product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SPLCustombd`.`Product` (
  `idProduct` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(200) NULL DEFAULT NULL,
  `ProductPortfolio_idPortfolio` VARCHAR(200) NOT NULL,
  INDEX `fk_Product_ProductPortfolio1_idx` (`ProductPortfolio_idPortfolio` ASC),
  PRIMARY KEY (`idProduct`),
  CONSTRAINT `fk_Product_ProductPortfolio1`
    FOREIGN KEY (`ProductPortfolio_idPortfolio`)
    REFERENCES `SPLCustombd`.`ProductPortfolio` (`idPortfolio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SPLCustombd`.`ProductRelease`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SPLCustombd`.`ProductRelease` (
  `idRelease` VARCHAR(200) NOT NULL,
  `releaseDate` DATETIME NOT NULL,
  `Product_idProduct` INT NOT NULL,
  PRIMARY KEY (`idRelease`),
  INDEX `fk_ProductRelease_Product1_idx` (`Product_idProduct` ASC),
  CONSTRAINT `fk_ProductRelease_Product1`
    FOREIGN KEY (`Product_idProduct`)
    REFERENCES `SPLCustombd`.`Product` (`idProduct`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SPLCustombd`.`ProductAsset`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SPLCustombd`.`ProductAsset` (
  `idProductAsset` INT NOT NULL,
  `name` VARCHAR(200) NOT NULL,
  `path` VARCHAR(200) NOT NULL,
  `content` LONGTEXT NOT NULL,
  `size` INT NOT NULL,
  `ProductRelease_idRelease` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`idProductAsset`),
  INDEX `fk_ProductAsset_ProductRelease1_idx` (`ProductRelease_idRelease` ASC),
  CONSTRAINT `fk_ProductAsset_ProductRelease1`
    FOREIGN KEY (`ProductRelease_idRelease`)
    REFERENCES `SPLCustombd`.`ProductRelease` (`idRelease`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SPLCustombd`.`VariationPoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SPLCustombd`.`VariationPoint` (
  `idVariationPoint` INT NOT NULL,
  `expression` VARCHAR(200) NULL,
  `idProductAsset` INT NULL,
  `line_init` INT NULL,
  `line_end` INT NULL,
  `greatest_parent_id` INT NULL,
  `idCoreAsset` INT NULL,
  `body` LONGTEXT NULL,
  PRIMARY KEY (`idVariationPoint`),
  INDEX `fk_VariationPoint_ProductAsset1_idx` (`idProductAsset` ASC),
  INDEX `fk_VariationPoint_VariationPoint1_idx` (`greatest_parent_id` ASC),
  INDEX `fk_VariationPoint_CoreAsset1_idx` (`idCoreAsset` ASC),
  CONSTRAINT `fk_VariationPoint_ProductAsset1`
    FOREIGN KEY (`idProductAsset`)
    REFERENCES `SPLCustombd`.`ProductAsset` (`idProductAsset`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_VariationPoint_VariationPoint1`
    FOREIGN KEY (`greatest_parent_id`)
    REFERENCES `SPLCustombd`.`VariationPoint` (`idVariationPoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_VariationPoint_CoreAsset1`
    FOREIGN KEY (`idCoreAsset`)
    REFERENCES `SPLCustombd`.`CoreAsset` (`idCoreAsset`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SPLCustombd`.`Customization`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SPLCustombd`.`Customization` (
  `idCustomization` INT NOT NULL AUTO_INCREMENT,
  `operation` VARCHAR(200) NOT NULL,
  `CoreAsset_idCoreAsset` INT NULL DEFAULT NULL,
  `ProductAsset_idProductAsset` INT NOT NULL,
  `isNewFeature` INT NULL DEFAULT NULL,
  `isNewAsset` INT NULL DEFAULT NULL,
  `idVariationPoint` INT NULL,
  PRIMARY KEY (`idCustomization`),
  INDEX `fk_Customization_CoreAsset1_idx` (`CoreAsset_idCoreAsset` ASC),
  INDEX `fk_Customization_ProductAsset1_idx` (`ProductAsset_idProductAsset` ASC),
  INDEX `fk_Customization_VariationPoint1_idx` (`idVariationPoint` ASC),
  CONSTRAINT `fk_Customization_CoreAsset1`
    FOREIGN KEY (`CoreAsset_idCoreAsset`)
    REFERENCES `SPLCustombd`.`CoreAsset` (`idCoreAsset`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Customization_ProductAsset1`
    FOREIGN KEY (`ProductAsset_idProductAsset`)
    REFERENCES `SPLCustombd`.`ProductAsset` (`idProductAsset`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Customization_VariationPoint1`
    FOREIGN KEY (`idVariationPoint`)
    REFERENCES `SPLCustombd`.`VariationPoint` (`idVariationPoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SPLCustombd`.`CoreAssetBaseline_has_Feature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SPLCustombd`.`CoreAssetBaseline_has_Feature` (
  `CoreAssetBaseline_idBaseline` VARCHAR(200) NOT NULL,
  `Feature_idFeature` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`CoreAssetBaseline_idBaseline`, `Feature_idFeature`),
  INDEX `fk_CoreAssetBaseline_has_Feature_Feature1_idx` (`Feature_idFeature` ASC),
  INDEX `fk_CoreAssetBaseline_has_Feature_CoreAssetBaseline1_idx` (`CoreAssetBaseline_idBaseline` ASC),
  CONSTRAINT `fk_CoreAssetBaseline_has_Feature_CoreAssetBaseline1`
    FOREIGN KEY (`CoreAssetBaseline_idBaseline`)
    REFERENCES `SPLCustombd`.`CoreAssetBaseline` (`idBaseline`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CoreAssetBaseline_has_Feature_Feature1`
    FOREIGN KEY (`Feature_idFeature`)
    REFERENCES `SPLCustombd`.`Feature` (`idFeature`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SPLCustombd`.`CoreAsset_has_Feature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SPLCustombd`.`CoreAsset_has_Feature` (
  `Feature_idFeature` VARCHAR(45) NOT NULL,
  `CoreAsset_idCoreAsset` INT NOT NULL,
  PRIMARY KEY (`Feature_idFeature`, `CoreAsset_idCoreAsset`),
  INDEX `fk_Feature_has_CoreAsset_CoreAsset1_idx` (`CoreAsset_idCoreAsset` ASC),
  INDEX `fk_Feature_has_CoreAsset_Feature1_idx` (`Feature_idFeature` ASC),
  CONSTRAINT `fk_Feature_has_CoreAsset_Feature1`
    FOREIGN KEY (`Feature_idFeature`)
    REFERENCES `SPLCustombd`.`Feature` (`idFeature`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Feature_has_CoreAsset_CoreAsset1`
    FOREIGN KEY (`CoreAsset_idCoreAsset`)
    REFERENCES `SPLCustombd`.`CoreAsset` (`idCoreAsset`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SPLCustombd`.`Feature_in_variationpoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SPLCustombd`.`Feature_in_variationpoint` (
  `idFeature` VARCHAR(200) NOT NULL,
  `idVariationPoint` INT NOT NULL,
  PRIMARY KEY (`idFeature`, `idVariationPoint`),
  INDEX `fk_Feature_has_VariationPoint_VariationPoint1_idx` (`idVariationPoint` ASC),
  INDEX `fk_Feature_has_VariationPoint_Feature1_idx` (`idFeature` ASC),
  CONSTRAINT `fk_Feature_has_VariationPoint_Feature1`
    FOREIGN KEY (`idFeature`)
    REFERENCES `SPLCustombd`.`Feature` (`idFeature`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Feature_has_VariationPoint_VariationPoint1`
    FOREIGN KEY (`idVariationPoint`)
    REFERENCES `SPLCustombd`.`VariationPoint` (`idVariationPoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `SPLCustombd` ;

-- -----------------------------------------------------
-- Placeholder table for view `SPLCustombd`.`Customizationgbproductfeature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SPLCustombd`.`Customizationgbproductfeature` (`'id'` INT, `'idbaseline'` INT, `'featuremodified'` INT, `'idproduct'` INT, `'name'` INT, `'idrelease'` INT, `churn` INT);

-- -----------------------------------------------------
-- Placeholder table for view `SPLCustombd`.`customizationbgfile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SPLCustombd`.`customizationbgfile` (`'id'` INT, `'idcoreasset'` INT, `'path'` INT, `'cafilename'` INT, `'idbaseline'` INT, `'featuremodified'` INT, `'churn'` INT, `'numberofproductscustomizing'` INT);

-- -----------------------------------------------------
-- Placeholder table for view `SPLCustombd`.`customizationsbyoperation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SPLCustombd`.`customizationsbyoperation` (`'id'` INT, `'pa_name'` INT, `'idproduct'` INT, `'product_name'` INT, `path` INT, `'idrelease'` INT, `'operation'` INT, `'locs'` INT, `'ca_size'` INT, `'pa_size'` INT, `'delta'` INT);

-- -----------------------------------------------------
-- Placeholder table for view `SPLCustombd`.`notcustomizedproductassets`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SPLCustombd`.`notcustomizedproductassets` (`'id'` INT, `idproductasset` INT, `name` INT, `path` INT, `content` INT, `size` INT, `idrelease` INT);

-- -----------------------------------------------------
-- View `SPLCustombd`.`Customizationgbproductfeature`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SPLCustombd`.`Customizationgbproductfeature`;
USE `SPLCustombd`;
create  OR REPLACE view Customizationgbproductfeature AS 
select UUID() as 'id', idBaseline as 'idbaseline', f.name as 'featuremodified' , p.idproduct as 'idproduct', p.name as 'name', pr.idRelease as 'idrelease',count(idCustomization) AS churn
from coreassetbaseline b INNER JOIN coreasset ca on idBaseline=ca.coreassetbaseline_idbaseline
inner join customization c on c.coreasset_idcoreasset=ca.idcoreasset
inner join variationpoint vp on vp.idvariationpoint = c.idvariationpoint
inner join feature_in_variationpoint fvp on  fvp.idvariationpoint=vp.idvariationpoint
inner join feature f on fvp.idfeature = f.idfeature

inner join productasset pa on pa.idProductasset=c.productasset_idproductasset
inner join productrelease pr on pr.idrelease=pa.productrelease_idRelease
inner join product p on p.idProduct=pr.product_idproduct
group by idBaseline,f.name,pr.idRelease
order by idBaseline;

-- -----------------------------------------------------
-- View `SPLCustombd`.`customizationbgfile`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SPLCustombd`.`customizationbgfile`;
USE `SPLCustombd`;
Create  OR REPLACE view customizationbgfile as
select UUID() as 'id', ca.idcoreasset as 'idcoreasset' ,ca.path as 'path', 
ca.name as 'cafilename', idBaseline as 'idbaseline', c.featureNameModified as 'featuremodified', count(idCustomization) as 'churn', count(Distinct(p.idProduct)) as 'numberofproductscustomizing'
from coreassetbaseline b INNER JOIN coreasset ca on idBaseline=ca.coreassetbaseline_idbaseline
inner join customization c on c.coreasset_idcoreasset=ca.idcoreasset
inner join productasset pa on pa.idProductasset=c.productasset_idproductasset
inner join productrelease pr on pr.idrelease=pa.productrelease_idRelease
inner join product p on p.idProduct=pr.product_idproduct
group by idBaseline, ca.idCoreasset, featuremodified;

-- -----------------------------------------------------
-- View `SPLCustombd`.`customizationsbyoperation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SPLCustombd`.`customizationsbyoperation`;
USE `SPLCustombd`;
create  OR REPLACE view customizationsbyoperation AS

select UUID() as 'id', pa.name as 'pa_name', p.idproduct as 'idproduct', p.name as 'product_name', pa.path, pr.idrelease as 'idrelease', c.operation as 'operation', count(c.operation) as 'locs' , ca.size as 'ca_size', pa.size as 'pa_size',  pa.size-ca.size as 'delta'
from productasset pa
inner join customization c on c.productasset_idproductasset = pa.idproductasset
inner join productrelease pr on pr.idrelease = pa.productrelease_idrelease
inner join product p on p.idproduct = pr.product_idproduct
inner join coreasset ca on ca.idcoreasset = c.coreasset_idcoreasset
group by pa.idproductasset, pr.idrelease, c.operation , ca.idcoreasset;

-- -----------------------------------------------------
-- View `SPLCustombd`.`notcustomizedproductassets`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SPLCustombd`.`notcustomizedproductassets`;
USE `SPLCustombd`;
create  OR REPLACE view notcustomizedproductassets AS 
select UUID() as 'id',pa.idproductasset, pa.name, pa.path,pa.content,pa.size, pr.idrelease
from productasset pa inner join productrelease pr on pa.productrelease_idrelease=pr.idrelease
where idproductasset NOT IN (select productasset_idproductasset from customization);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
